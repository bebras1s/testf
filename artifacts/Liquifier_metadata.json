{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenAmountSent",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "ethAmountSent",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					}
				],
				"name": "LiquidityAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousManager",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newManager",
						"type": "address"
					}
				],
				"name": "ManagementTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "router",
						"type": "address"
					}
				],
				"name": "RouterSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensSwapped",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "ethReceived",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensIntoLiquidity",
						"type": "uint256"
					}
				],
				"name": "SwapAndLiquify",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "enabled",
						"type": "bool"
					}
				],
				"name": "SwapAndLiquifyEnabledUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getUnlockTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "lock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "manager",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "router",
						"type": "address"
					}
				],
				"name": "setRouterAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "enabled",
						"type": "bool"
					}
				],
				"name": "setSwapAndLiquifyEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newManager",
						"type": "address"
					}
				],
				"name": "transferManagement",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unlock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "recipient",
						"type": "address"
					}
				],
				"name": "withdrawLockedEth",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"setRouterAddress(address)": {
					"details": "Sets the uniswapV2 pair (router & factory) for swapping and liquifying tokens"
				},
				"setSwapAndLiquifyEnabled(bool)": {
					"details": "Sends the swap and liquify flag to the provided value. If set to `false` tokens collected in the contract will NOT be converted into liquidity."
				},
				"withdrawLockedEth(address)": {
					"details": "The owner can withdraw ETH(BNB) collected in the contract from `swapAndLiquify` or if someone (accidentally) sends ETH/BNB directly to the contract. Note: This addresses the contract flaw pointed out in the Certik Audit of Safemoon (SSL-03):  The swapAndLiquify function converts half of the contractTokenBalance SafeMoon tokens to BNB.  For every swapAndLiquify function call, a small amount of BNB remains in the contract.  This amount grows over time with the swapAndLiquify function being called  throughout the life of the contract. The Safemoon contract does not contain a method  to withdraw these funds, and the BNB will be locked in the Safemoon contract forever. https://www.certik.org/projects/safemoon"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"nextcoin.sol": "Liquifier"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"next-imports.sol": {
			"keccak256": "0x455220248830cc984fa0f98936c78281d6e2c953a6ac0c30d8f91f33e548039e",
			"license": "MIT",
			"urls": [
				"bzz-raw://c81b4daba3199ad7d56369dee62ab7c23ba07eb52a2a03d7d4132fe1af1c1dc8",
				"dweb:/ipfs/QmSWsduPK3LuSZsZsx9dzct8U8rXDmB8YyLE7x9STfnyMv"
			]
		},
		"nextcoin.sol": {
			"keccak256": "0x9969cdbcbfd00ea31942b0681fb7ee0e74eb83f45f106faa28e76d10e21dc1e2",
			"urls": [
				"bzz-raw://62502eead5f21317ff1c82feb622664935a557f319e7365dc5da616bf5d4c2a5",
				"dweb:/ipfs/QmQNGByxthjFzEfnCeMK5TmkdsU9EtstNKDpLRkMANY5X9"
			]
		}
	},
	"version": 1
}